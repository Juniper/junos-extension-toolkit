////////////////////////////////////////////////////////////////////
//
// ord_service.japi
//
// GRPC Definitions for openroadm RPC services handled in openroadmd
//
// Rashid Ahmed Raj, February 2019
//
// Copyright (c) 2019, Juniper Networks, Inc.
// All rights reserved.
//
////////////////////////////////////////////////////////////////////

syntax = "proto3";

package openroadm.ord;

service RpcInterface {
    rpc DbBackup(DbBackupRequest) returns(RpcStatusReply) {}
    rpc DbRestore(DbRestoreRequest) returns(RpcStatusReply) {}
    rpc DbActivate(DbActivateRequest) returns(RpcStatusReply) {}
    rpc CreateTechInfo(CreateTechInfoRequest) returns(RpcStatusReply) {}
    rpc Transfer(TransferRequest) returns(RpcStatusReply) {}
    rpc SwStage(SwStageRequest) returns(RpcStatusReply) {}
    rpc SwActivate(SwActivateRequest) returns(RpcStatusReply) {}
    rpc Alarm(AlarmRequest) returns(RpcStatusReply) {}
}

////////////////////////////////////////////////////////////////////
//
// Common Message Definitions
//
////////////////////////////////////////////////////////////////////
message RpcStatus {
    int32               status                  = 1;
}

////////////////////////////////////////////////////////////////////
//
// Simple Status only Reply
//
////////////////////////////////////////////////////////////////////
message RpcStatusReply {
    RpcStatus           status                  = 1;
}

////////////////////////////////////////////////////////////////////
//
// API : DbBackupRequest
//
////////////////////////////////////////////////////////////////////
message DbBackupRequest {
    string status = 1;
    string message = 2;
}

////////////////////////////////////////////////////////////////////
//
// API : DbRestoreRequest
//
////////////////////////////////////////////////////////////////////
message DbRestoreRequest {
    string status = 1;
    string message = 2;
}

////////////////////////////////////////////////////////////////////
//
// API : DbActivateRequest
//
////////////////////////////////////////////////////////////////////
message DbActivateRequest {
    string status = 1;
    string message = 2;
    string type = 3;
    int32 time = 4;
}

////////////////////////////////////////////////////////////////////
//
// API : CreateTechInfoRequest
//
////////////////////////////////////////////////////////////////////
message CreateTechInfoRequest {
    string status = 1;
    string message = 2;
    string shelf = 3;
    string filename = 4;
}

////////////////////////////////////////////////////////////////////
//
// API : TransferRequest
//
////////////////////////////////////////////////////////////////////
message TransferRequest {
    string filename = 1;
    string status = 2;
    string message = 3;
    int32 bytes = 4;
    int32 percent = 5;
}

////////////////////////////////////////////////////////////////////
//
// API : SwStageRequest
//
////////////////////////////////////////////////////////////////////
message SwStageRequest {
    string status = 1;
    string message = 2;
}

////////////////////////////////////////////////////////////////////
//
// API : SwActivateRequest
//
////////////////////////////////////////////////////////////////////
message SwActivateRequest {
    string status = 1;
    string message = 2;
    string type = 3;
}

////////////////////////////////////////////////////////////////////
//
// API : AlarmRequest
//
////////////////////////////////////////////////////////////////////
message AlarmRequest {
    string operation = 1;
    string type = 2;
}
